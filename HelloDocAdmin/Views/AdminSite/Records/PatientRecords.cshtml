@using static HelloDocAdmin.Entity.ViewModels.AdminSite.Constant;
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
@{
    var enumData = from RequestType e in Enum.GetValues(typeof(RequestType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
@model HelloDocAdmin.Entity.ViewModels.AdminSite.PatientRecordsView
<div class="container-fluid">
    <div class="card bg-transparent border-0">
        <div class="card-header d-flex justify-content-between  border-0  bg-transparent p-1  mt-3 mb-2">
            <div class="text-start d-flex align-items-center">
                <h5 class="mt-2 bold"><b> Patient Records</b></h5>

            </div>
           
        </div>

        <div class="card-body rounded shadow">
            <div class="table-responsive dashboard-tbl mt-3 " @*id="tbl"*@>

                <table id="myTable" class="table table-responsive">
                    <thead class=" text-start tablehead">
                        <tr>
                            <th scope="col">Client/Member</th>
                            <th scope="col">Created Date</th>
                            <th scope="col">Conformation</th>
                            <th scope="col">Provider Name</th>

                            <th scope="col">ConcludeDate Date</th>
                            <th scope="col">Status</th>
                            <th scope="col">Final Reports</th>
                            <th scope="col">Action</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (item, i) in Model.List.Select((item, i) => (item, i)))
                        {
                            <tr>
                                <td scope="col" class="table-text">@item.ClientName</td>
                                <td scope="col" class="table-text">@item.CreatedDate</td>


                                <td scope="col" class="table-text">@item.ConfirmationNumber</td>
                                <td scope="col" class="table-text">@item.ProviderName</td>
                                <td scope="col" class="table-text">@item.ConcludeDate</td>

                                <td scope="col" class="table-text">@Enum.GetName(typeof(Status), item.StatusID)</td>
                                <td scope="col" class="table-text">
                                    <button onclick="getfilterdata()" class="btn btn-sm btn-outline-info  mx-2 ">
                                        Final
                                    </button>
                                </td>

                                <td scope="col" class="table-text">
                                    <button onclick="getfilterdata()" class="btn btn-sm btn-outline-info  mx-2 ">
                                        Action
                                    </button>
                                </td>
                            </tr>




                        }


                    </tbody>
                </table>

            </div>
            <input type="hidden" id="crt-page" value="1" />
            <div class="d-flex justify-content-between">
                <div class="text-start">

                    <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
                        <option value="5" selected>5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20" >20</option>
                    </select>
                </div>
          @*      <div class="text-center">
                    <nav aria-label="Page  navigation example">
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item"><a class="page-link" asp-action="PatientRecords" asp-controller="Records" asp-route-UserID="@Model.UserID" asp-route-CurrentPage">Previous</a></li>
                            }

                            @for (int i = 1; i <= Model.TotalPage; i++)
                            {

                                <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "") " onclick="getpage(@i); getfilterdata(); ">@i</a></li>
                            }
                            @if (Model.CurrentPage < Model.TotalPage)
                            {
                                <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata(); ">next</a></li>
                            }

                        </ul>
                    </nav>
                </div>*@

            </div>
        </div>
    </div>

</div>
