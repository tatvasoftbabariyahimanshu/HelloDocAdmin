@model HelloDocAdmin.Entity.ViewModels.AdminSite.BlockRequest
@using static HelloDocAdmin.Entity.ViewModels.AdminSite.Constant;
@{
    var enumData = from RequestType e in Enum.GetValues(typeof(RequestType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var AccountType = from AccountType e in Enum.GetValues(typeof(AccountType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var Action1 = from Action1 e in Enum.GetValues(typeof(Action1))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
<div class="table-responsive dashboard-tbl mt-4 " @*id="tbl"*@>

    <table id="myTable" class="table table-responsive">
        <thead class=" text-start tablehead">
            <tr>
                <th scope="col">Patient name</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Email</th>
                <th scope="col">Created Date</th>
                <th scope="col">Notes</th>
                <th scope="col">Is Active</th>
                <th scope="col">Action </th>
               

            </tr>
        </thead>
        <tbody>
            @foreach (var (item, i) in Model.List.Select((item, i) => (item, i)))
            {
               <tr>
                    <td scope="col" class="table-text">@item.PatientName</td>
                 
                    <td scope="col" class="table-text">@item.Phonenumber</td>
                     <td scope="col" class="table-text">@item.Email</td>
                      <td scope="col" class="table-text">@item.Createddate</td>
                    <td scope="col" class="table-text">@item.Reason</td>
                       <td scope="col" class="table-text">YES</td>
                    <td scope="col" class="table-text">
                        <a class="btn btn-sm btn-outline-info" asp-action="UnBlock" asp-controller="Records" asp-route-RequestId="@item.Requestid">
                        Unblock
                    </a></td>

                
                </tr>




            }


        </tbody>
    </table>

</div>
<input type="hidden" id="crt-page" value="1" />
<div class="d-flex justify-content-between">
    <div class="text-start">

        <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
    </div>
    <div class="text-center">
        <nav aria-label="Page  navigation example">
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage-1); getfilterdata(); ">Previous</a></li>
                }

                @for (int i = 1; i <= Model.TotalPage; i++)
                {

                    <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "") " onclick="getpage(@i); getfilterdata(); ">@i</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPage)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata(); ">next</a></li>
                }

            </ul>
        </nav>
    </div>

</div>