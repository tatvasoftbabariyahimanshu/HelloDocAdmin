@model HelloDocAdmin.Entity.ViewModels.AdminSite.BlockRequest
@using static HelloDocAdmin.Entity.ViewModels.AdminSite.Constant;
@{
    var enumData = from RequestType e in Enum.GetValues(typeof(RequestType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var AccountType = from AccountType e in Enum.GetValues(typeof(AccountType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
    var Action1 = from Action1 e in Enum.GetValues(typeof(Action1))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
<div class="table-responsive dashboard-tbl mt-4 " id="tbl">

    <table id="myTable" class="table table-responsive">
        <thead class=" text-start tablehead">
            <tr>
                <th scope="col">Patient name</th>
                <th scope="col">Phone Number</th>
                <th scope="col">Email</th>
                <th scope="col">Created Date</th>
                <th scope="col">Notes</th>
                <th scope="col">Is Active</th>
                <th scope="col">Action </th>
               

            </tr>
        </thead>
        <tbody>
            @foreach (var (item, i) in Model.List.Select((item, i) => (item, i)))
            {
               <tr>
                    <td scope="col" class="table-text">@item.PatientName</td>
                 
                    <td scope="col" class="table-text">@item.Phonenumber</td>
                     <td scope="col" class="table-text">@item.Email</td>
                      <td scope="col" class="table-text">@item.Createddate</td>
                    <td scope="col" class="table-text">@item.Reason</td>
                       <td scope="col" class="table-text">YES</td>
                    <td scope="col" class="table-text">
                        <a class="btn btn-sm btn-outline-info" asp-action="UnBlock" asp-controller="Records" asp-route-RequestId="@item.Requestid">
                        Unblock
                    </a></td>

                
                </tr>




            }


        </tbody>
    </table>

</div>
@foreach (var (item, i) in Model.List.Select((item, i) => (item, i)))
{
    <div class="accordion-item text-secondary mt-2 " style="position:relative;" id="Acordiantable">
        <h2 class="accordion-header btn-i " id="flush-heading-@item.Requestid">
            <div class="p-3 collapsed border-bottom" type="button" data-bs-toggle="collapse" data-bs-target="#flush-@item.Requestid" aria-expanded="false" aria-controls="collapse_@item.Requestid">
                <div class="d-flex text-dark align-items-center justify-content-between w-100">
                    <div class="text-start mb-3 h6">

                        <b mx-2>@item.PatientName</b>
                    </div>


                </div>
                <div class="d-flex row  text-dark justify-content-between w-100 mb-3 ">
                    
                    <div class="text-start h6">
                        <small>  Email : <b>@item.Email</b></small>
                    </div>

                </div>

            </div>
        </h2>

        <div id="flush-@item.Requestid" class="accordion-collapse text-dark  position-relative  btn-i p-2 collapse mb-3 border-top" data-bs-parent="#accordionExample">

            <div class="accordion-body container-fluid">

                <p> <i class="fa fa-phone-square border border-info rounded-pill p-1 me-2"></i><b>Phone :</b> @item.Phonenumber</p>
                <p> <i class="fa fa-calendar border border-info rounded-pill p-1 me-2" aria-hidden="true"></i><b>Created Date :</b> @item.Createddate</p>
                <p> <i class="fa fa-commenting-o border border-info rounded-pill p-1 me-2" aria-hidden="true"></i><b>Notes : </b> @item.Reason</p>

                <p> <i class="fa fa-star-half-o border border-info rounded-pill p-1 me-2" aria-hidden="true"></i><b>Is Active:</b> Yes</p>





                <div class="text-end d-md-flex justify-content-md-end">

                    <a class="btn btn-outline-info  text-info me-md-2 mb-2" asp-action="UnBlock" asp-controller="Records" asp-route-RequestId="@item.Requestid">
                       Unblock
                    </a>

                </div>

            </div>
        </div>

    </div>
}
<input type="hidden" id="crt-page" value="1" />
<div class="d-flex justify-content-between">
    <div class="text-start">

        <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
    </div>
    <div class="text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage-1); getfilterdata();">Previous</a></li>
                }

                @for (int i = Math.Max(1, (byte)Model.CurrentPage - 2); i <= Math.Min((byte)Model.TotalPage, (byte)Model.CurrentPage + 3); i++)
                {
                    <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "")" onclick="getpage(@i); getfilterdata();">@i</a></li>
                }

                @if (Model.CurrentPage < Model.TotalPage - 5)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.TotalPage); getfilterdata();">@Model.TotalPage</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPage)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata();">Next</a></li>
                }
            </ul>
        </nav>
    </div>

</div>