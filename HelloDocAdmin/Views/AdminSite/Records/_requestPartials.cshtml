@model HelloDocAdmin.Entity.ViewModels.AdminSite.RequestRecords
@using static HelloDocAdmin.Entity.ViewModels.AdminSite.Constant;
@{
    var enumData = from RequestType e in Enum.GetValues(typeof(RequestType))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
<div class="table-responsive dashboard-tbl mt-3 " id="tbl">

    <table id="myTable" class="table table-responsive">
        <thead class=" text-start tablehead">
            <tr>
                <th scope="col">Patient Name</th>
                <th scope="col">Requestor</th>
                <th scope="col">Date Of service</th>
                <th scope="col">Close Case Date </th>
                <th scope="col">Email</th>
                <th scope="col">Phone number</th>
                <th scope="col">Address</th>
                <th scope="col">Zip</th>
                <th scope="col">Request Status</th>
                 <th scope="col">Physician</th>
                <th scope="col">Physician Notes </th>
                <th scope="col">Cancel By Provider Note</th>
                <th scope="col">Admin Notes</th>
                <th scope="col">Patient Notes</th>
                <th scope="col">Delete Permanently</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (item, i) in Model.requestList.Select((item, i) => (item, i)))
            {
<tr>
                    <td scope="col" class="table-text">@item.PatientName</td>
                    <td scope="col" class="table-text">@Enum.GetName(typeof(RequestType), item.RequestTypeID)</td>
                    <td scope="col" class="table-text">@item.DateOfService</td>
                    @if(item.CloseCaseDate!=null)
                    {
                        <td scope="col" class="table-text">@item.CloseCaseDate</td>
                    }
                    else
                    {
                        <td scope="col" class="table-text">-</td>
                    }
              
                    <td scope="col" class="table-text">@item.Email</td>
                    <td scope="col" class="table-text">@item.PhoneNumber</td>      
                    <td scope="col" class="table-text">@item.Address</td>
                    <td scope="col" class="table-text">@item.Zip</td>
                    <td scope="col" class="table-text">@Enum.GetName(typeof(Status), item.Status)</td>
                    <td scope="col" class="table-text">@item.PhysicianName</td>
                    <td scope="col" class="table-text">@item.PhysicianNote</td>
                    @if (item.CancelByProviderNote != "")
                    {
                        <td scope="col" class="table-text">@item.CancelByProviderNote</td>
                    }
                    else
                    {
                        <td scope="col" class="table-text">-</td>
                    }
                    <td scope="col" class="table-text">@item.AdminNote</td>
                    <td scope="col" class="table-text">@item.PatientNote</td>
                    <td scope="col" class="table-text">
                        <a class="btn btn-sm btn-outline-danger mx-2" onclick="confirmDelete('@item.RequestID')">Delete</a>
                    </td>
</tr>
           


               
            }


        </tbody>
    </table>

</div>


@foreach (var (item, i) in Model.requestList.Select((item, i) => (item, i)))
{
    <div class="accordion-item text-secondary mt-2 " style="position:relative;" id="Acordiantable">
        <h2 class="accordion-header btn-i " id="flush-heading-@item.RequestID">
            <div class="p-3 collapsed border-bottom" type="button" data-bs-toggle="collapse" data-bs-target="#flush-@item.RequestID" aria-expanded="false" aria-controls="collapse_@item.RequestID">
                <div class="d-flex text-dark align-items-center justify-content-between w-100">
                    <div class="text-start mb-3 h6">

                        <small mx-2>@item.PatientName</small>
                    </div>


                </div>
                <div class="d-flex row  text-dark justify-content-between w-100 mb-3 ">
                    <div class="text-start h6">
                        <small> @item.Address</small>
                    </div>

                </div>

            </div>
        </h2>

        <div id="flush-@item.RequestID" class="accordion-collapse text-dark  position-relative  btn-i p-2 collapse mb-3 border-top" data-bs-parent="#accordionExample">

            <div class="accordion-body container-fluid">

                <p> <i class="fa fa-envelope border border-info rounded-pill p-1 me-2"></i><b>Requestor :</b>  @Enum.GetName(typeof(RequestType), item.RequestTypeID)</p>
                <p> <i class="fa fa-calendar border border-info rounded-pill p-1 me-2" aria-hidden="true"></i><b>DateOfService:</b> @item.DateOfService</p>
                <p> <i class="fa fa-envelope border border-info rounded-pill p-1 me-2"></i><b>Email :</b>  @item.Email</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Patient : </b>@item.PhoneNumber</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Address : </b>@item.Address</p>
                      <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> ZipCode : </b>@item.Zip</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Request Status : </b>@item.Status</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Provider : </b>@item.PhysicianName</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Provider Note : </b>@item.PhysicianNote</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Cancel By ProviderNote : </b>@item.CancelByProviderNote</p>
                  <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Admin Note : </b>@item.AdminNote</p>
                <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> close Case Date : </b>@item.CloseCaseDate</p>
                    <p> <i class="fa fa-phone border  border-info rounded-pill p-1 me-2"></i><b> Patient Notes : </b>@item.PatientNote</p>
               




                <div class="text-end d-md-flex justify-content-md-end">

                    <a class="btn btn-outline-info  text-info me-md-2 mb-2" onclick="confirmDelete('@item.RequestID')">
                        Delete
                    </a>
                   
                </div>
            </div>
        </div>

    </div>
}
<input type="hidden" id="crt-page" value="1" />
<div class="d-flex justify-content-between">
    <div class="text-start">

        <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
            <option value="5" >5</option>
            <option value="10" selected>10</option>
            <option value="15">15</option>
            <option value="20" >20</option>
        </select>
    </div>
    <div class="text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage-1); getfilterdata();">Previous</a></li>
                }

                @for (int i = Math.Max(1, (byte)Model.CurrentPage - 2); i <= Math.Min((byte)Model.TotalPage, (byte)Model.CurrentPage + 3); i++)
                {
                    <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "")" onclick="getpage(@i); getfilterdata();">@i</a></li>
                }

                @if (Model.CurrentPage < Model.TotalPage - 5)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.TotalPage); getfilterdata();">@Model.TotalPage</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPage)
                {
                <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata();">Next</a></li>
                }
            </ul>
        </nav>
    </div>



</div>

<script>
    function confirmDelete(requestID) {
        Swal.fire({
            title: "Delete Request  ?",
            showDenyButton: false,
            showCancelButton: true,
            confirmButtonText: "Yes",
            denyButtonText: `Don't delete`
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Records/Delete?RequestId=' + requestID;
            }



        });
    }
</script>