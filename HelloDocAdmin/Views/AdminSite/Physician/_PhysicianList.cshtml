@using static HelloDocAdmin.Entity.ViewModels.AdminSite.Constant;
@{
   
    var enumData = from AdminStatus e in Enum.GetValues(typeof(AdminStatus))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
@model HelloDocAdmin.Entity.ViewModels.AdminSite.PhysiciansData;
<div class="table-responsive  dashboard-tbl mt-3 " id="tbl">
    <table id="myTable" class="table table-responsive">
        <thead class=" text-start tablehead">
            <tr>
                <th scope="col" class="text-center">Stop Notification</th>
                <th scope="col">Provider Name</th>
                <th scope="col">Role</th>
                <th scope="col">On Call Status</th>
                <th scope="col">Status</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody class="">
           
            @foreach (var item in Model.List)
            {
                <tr>
                    <td class="table-text px-3  justify-content-center" align="center" scope="row" data-label="Created Date">

                        @{
                            var check = item.notification[0];
                            <input class="form-check-input form-check-inputs" id="@item.notificationid" type="checkbox" value="" @(check ? "checked" : "")>
                        }

                        <input class="RequestwisefilesId" type="hidden" value="@item.Physicianid">
                    </td>
                    <td scope="row" class="table-text">@item.Firstname  @item.Lastname</td>
                    <td scope="row" class="table-text">@item.role</td>
                    <td scope="row" class="table-text">@item.Isnondisclosuredoc</td>
                    <td scope="row" class="table-text">@Enum.GetName(typeof(AdminStatus), item.Status) </td>
                    <td class=" d-flex" data-label="Document">

                        <button data-bs-toggle="modal" data-bs-id="@item.Physicianid" data-bs-email="@item.Email" data-bs-target="#myModal" class="btn btn-outline-info btn-sm document-button mx-1">
                            Contact
                        </button>
                        <a asp-action="PhysicianProfile" asp-controller="Physician" asp-route-id="@item.Physicianid" class="btn btn-outline-info btn-sm document-button mx-1">
                            Edit
                        </a>
                    </td>
                </tr>
            }



        </tbody>
    </table>
</div>
@foreach (var item in Model.List)
{
    <div class="accordion-item text-secondary mt-2 " style="position:relative;" id="Acordiantable">
        <h2 class="accordion-header btn-i " id="flush-heading-@item.Physicianid">
            <div class="p-3 collapsed border-bottom" type="button" data-bs-toggle="collapse" data-bs-target="#flush-@item.Physicianid" aria-expanded="false" aria-controls="collapse_@item.Physicianid">
                <div class="d-flex text-dark align-items-center justify-content-between w-100">
                    <div class="text-start d-flex mb-3 h6">

                        @{
                            var check = item.notification[0];
                            <input class="form-check-input form-check-inputs mx-2" id="@item.notificationid" type="checkbox" value="" @(check ? "checked" : "")>
                        } <h6 mx-2>@item.Firstname  @item.Lastname</h6>
                    </div>


                </div>
                <div class="d-flex row  text-dark justify-content-between w-100 mb-3 ">
                    <div class="text-start h6">
                        <small>On Call Status : <b class="mx-1"> Un Available</b></small>
                    </div>

                </div>

            </div>
        </h2>

        <div id="flush-@item.Physicianid" class="accordion-collapse text-dark  position-relative  btn-i p-2 collapse mb-3 border-top" data-bs-parent="#accordionExample">

            <div class="accordion-body container-fluid">

                <p> <i class="fa fa-user-circle  border border-info rounded-pill p-1 me-2"></i><b>Role :</b>  @item.role</p>
                <p> <i class="fa fa-code-fork border border-info rounded-pill p-1 me-2"></i><b> Status : </b>@Enum.GetName(typeof(AdminStatus), item.Status)</p>




                <div class="text-end d-md-flex justify-content-md-end">

                    <a class="btn btn-outline-info  text-info me-md-2 mb-2" data-bs-toggle="modal" data-bs-id="@item.Physicianid" data-bs-email="@item.Email" data-bs-target="#myModal">
                        Contact
                    </a>
                    <a class="btn btn-white border-info text-info mb-2" asp-action="PhysicianProfile" asp-controller="Physician" asp-route-id="@item.Physicianid">
                        Edit
                    </a>
                </div>
            </div>
        </div>

    </div>
}
<input type="hidden" id="crt-page" value="1" />
<div class="d-flex justify-content-between">
    <div class="text-start">

        <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
    </div>
    <div class="text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage-1); getfilterdata();">Previous</a></li>
                }

                @for (int i = Math.Max(1, (byte)Model.CurrentPage - 2); i <= Math.Min((byte)Model.TotalPage, (byte)Model.CurrentPage + 3); i++)
                {
                    <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "")" onclick="getpage(@i); getfilterdata();">@i</a></li>
                }

                @if (Model.CurrentPage < Model.TotalPage - 5)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.TotalPage); getfilterdata();">@Model.TotalPage</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPage)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata();">Next</a></li>
                }
            </ul>
        </nav>
    </div>

</div>
<script>
    $(document).ready(function () {

        $('#saveChangesButton').click(function () {
            $('#saveChangesForm').submit();
        });

        // Initialize an object to track the initial state of each checkbox
        var initialState = {};

        // Store the initial state of each checkbox when the page loads
        $('.form-check-inputs').each(function () {
            initialState[this.id] = this.checked;

        });

        $('.form-check-inputs').change(function () {
            var changedValues = {};

            // Check each checkbox for changes
            $('.form-check-inputs').each(function () {
                if (this.checked !== initialState[this.id]) {
                    changedValues[this.id] = this.checked;
                }
            });

            // Update the hidden input with the changed values
            $('#changedValuesInput').val(JSON.stringify(changedValues));
            console.log(changedValues);
            // Show or hide the "Save Changes" button based on whether there are any changes
            if (Object.keys(changedValues).length > 0) {
                $('#saveChangesButton').show();
            } else {
                $('#saveChangesButton').hide();
            }
        });


    });
</script>