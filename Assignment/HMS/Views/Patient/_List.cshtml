@model HMS.Entity.ViewModels.PatientData
@using static HMS.Entity.ViewModels.Constant;
@{

    var enumData = from Gender e in Enum.GetValues(typeof(Gender))
                   select new
                   {
                       ID = (int)e,
                       Name = e.ToString()
                   };
}
<div class="table-responsive  dashboard-tbl mt-3 " >
    <table id="myTable" class="table table-responsive">
        <thead  class=" text-start ">
            <tr>
                <th scope="col" class="fw-bold">PatientID</th>
                <th scope="col" class="fw-bold">FirstName</th>
                <th scope="col" class="fw-bold">LastName</th>
                <th scope="col" class="fw-bold">Email </th>
                <th scope="col" class="fw-bold">Age</th>
                <th scope="col" class="fw-bold">PhoneNumber</th>
                <th scope="col" class="fw-bold">Gender</th>
                <th scope="col" class="fw-bold">Disease</th>
                <th scope="col" class="fw-bold">Doctor</th>
                <th scope="col" class="fw-bold">Action</th>
            </tr>
        </thead>
        <tbody class="">
            @foreach (var item in Model.PatientList)
            {
                <tr>
                    <td scope="col" class="table-text">@item.Id</td>
                    <td scope="col" class="table-text">@item.FirstName</td>
                    <td scope="col" class="table-text">@item.LastName</td>
                    <td scope="col" class="table-text">@item.Email</td>
                    <td scope="col" class="table-text">@item.Age</td>
                    <td scope="col" class="table-text">@item.PhoneNo</td>
                    <td scope="col" class="table-text">@Enum.GetName(typeof(Gender), item.Gender)</td>
                    <td scope="col" class="table-text">@item.Disease</td>
                    <td scope="col" class="table-text">@item.Specialist</td>
                    <td scope="col" class="table-text d-flex">

                        <a class="btn btn-sm btn-danger text-white mx-2"
                           onclick="confirmDelete('@item.Id')">Delete</a>
                        <a class="btn btn-sm text-white" data-bs-toggle="modal" style="background-color:#497DB6" id="openmmodel" data-bs-target="#Assigncase" onclick=" OpenModel(@item.Id)"> Edit</a>


                    </td>

                </tr>
            }
        </tbody>
    </table>

</div>
<input type="hidden" id="crt-page" value="1" />
<div class="d-flex justify-content-between">
    <div class=" d-flex align-items-center">

        <select id="SizeSelect" asp-for="pageSize" onchange="getfilterdata()" class="form-select">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
       
    </div>
    <div class="text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage-1); getfilterdata();">Previous</a></li>
                }

                @for (int i = Math.Max(1, (byte)Model.CurrentPage - 2); i <= Math.Min((byte)Model.TotalPage, (byte)Model.CurrentPage + 3); i++)
                {
                    <li class="page-item"><a class="page-link @(i == Model.CurrentPage ? "active" : "")" onclick="getpage(@i); getfilterdata();">@i</a></li>
                }

                @if (Model.CurrentPage < Model.TotalPage - 5)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.TotalPage); getfilterdata();">@Model.TotalPage</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPage)
                {
                    <li class="page-item"><a class="page-link" onclick="getpage(@Model.CurrentPage+1); getfilterdata();">Next</a></li>
                }
            </ul>
        </nav>
    </div>

</div>
